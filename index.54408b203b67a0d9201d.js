(()=>{"use strict";var t={419:()=>{new class{constructor(){var t;this.yPos=2,this.xPos=0,this.snakePosition=[[2,0],[1,0],[0,0]],this.direction=83,this.directionChanged=!1,this.intervalId=0,this.foodPosition=[0,0],this.foodEaten=!1,this.currentScore=0,this.bestScore=+(null!==(t=localStorage.getItem("score"))&&void 0!==t?t:0),this.oppositeKeys={87:83,83:87,68:65,65:68},this.changeDirection=t=>{[87,83,68,65].includes(t.keyCode)&&this.direction!==this.oppositeKeys[t.keyCode]&&!this.directionChanged&&(this.direction=t.keyCode),this.directionChanged=!0},this.eraseSnake=()=>{this.snakePosition.forEach((t=>{const[i,e]=t;this.cells[i][e].classList.remove("snake")}))},this.paintSnake=()=>{this.snakePosition.forEach((t=>{const[i,e]=t;this.cells[i][e].classList.add("snake")}))},this.updatePosition=()=>{83===this.direction&&this.yPos+1<this.gameFieldSize?(this.yPos+=1,this.foodEaten||this.snakePosition.pop(),this.snakePosition.unshift([this.yPos,this.xPos])):87===this.direction&&this.yPos-1>=0?(this.yPos-=1,this.foodEaten||this.snakePosition.pop(),this.snakePosition.unshift([this.yPos,this.xPos])):68===this.direction&&this.xPos+1<this.gameFieldSize?(this.xPos+=1,this.foodEaten||this.snakePosition.pop(),this.snakePosition.unshift([this.yPos,this.xPos])):65===this.direction&&this.xPos-1>=0?(this.xPos-=1,this.foodEaten||this.snakePosition.pop(),this.snakePosition.unshift([this.yPos,this.xPos])):this.gameOver(),this.checkCollision(),this.foodEaten=!1,this.checkFood()},this.checkCollision=()=>{this.snakePosition.forEach(((t,i)=>{if(0!==i){const[i,e]=t;e===this.xPos&&i===this.yPos&&this.gameOver()}}))},this.checkRecord=()=>{this.currentScore>this.bestScore&&(this.bestScoreElement.innerHTML=this.currentScore.toString(),localStorage.setItem("score",this.currentScore.toString()))},this.getRandomNumber=(t,i)=>Math.floor(Math.random()*(i-t+1))+t,this.createFood=()=>{let t=!0;for(;t;){t=!1;const i=this.getRandomNumber(0,this.gameFieldSize-1),e=this.getRandomNumber(0,this.gameFieldSize-1);this.snakePosition.forEach((s=>{const[o,n]=s;o===i&&n===e&&(t=!0)})),t||(this.foodPosition=[i,e],this.cells[i][e].classList.add("food"))}},this.checkFood=()=>{this.snakePosition[0].join("")===this.foodPosition.join("")&&(this.foodEaten=!0,this.clearFood(),this.createFood(),this.currentScore+=1,this.currentScoreElement.innerHTML=this.currentScore.toString(),this.checkRecord())},this.clearFood=()=>{const[t,i]=this.foodPosition;this.cells[t][i].classList.remove("food")},this.startGame=()=>{this.currentScore=0,this.currentScoreElement.innerHTML=this.currentScore.toString(),this.yPos=2,this.xPos=0,this.snakePosition=[[2,0],[1,0],[0,0]],this.direction=83,this.createFood()},this.gameOver=()=>{console.log("Game is over!"),this.clearFood(),this.startGame()},this.deinit=()=>{this.eraseSnake(),document.removeEventListener("keydown",this.changeDirection),clearInterval(this.intervalId),this.clearFood()},this.cells=[];const i=Array.from(document.querySelectorAll(".cell"));this.gameFieldSize=Math.sqrt(i.length);for(let t=0;t<this.gameFieldSize;t++)this.cells.push(i.splice(0,this.gameFieldSize));this.currentScoreElement=document.querySelector(".current-score"),this.bestScoreElement=document.querySelector(".record"),this.bestScoreElement.innerHTML=this.bestScore.toString(),this.createFood(),this.paintSnake(),this.intervalId=window.setInterval((()=>{this.directionChanged=!1,this.eraseSnake(),this.updatePosition(),this.paintSnake()}),150),document.addEventListener("keydown",this.changeDirection)}}}},i={};function e(s){var o=i[s];if(void 0!==o)return o.exports;var n=i[s]={exports:{}};return t[s](n,n.exports,e),n.exports}e.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),(()=>{var t;e.g.importScripts&&(t=e.g.location+"");var i=e.g.document;if(!t&&i&&(i.currentScript&&(t=i.currentScript.src),!t)){var s=i.getElementsByTagName("script");if(s.length)for(var o=s.length-1;o>-1&&!t;)t=s[o--].src}if(!t)throw new Error("Automatic publicPath is not supported in this browser");t=t.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),e.p=t})(),e(419),e.p})();